@import "scss/constants";

// @see https://math.stackexchange.com/questions/377234/circle-in-square-calculate-distance-from-squares-corner-to-circles-perimeter
$square-root-of-2: 1.41421356237;
$indicator-offset-factor: ($square-root-of-2 - 1) / 2;
$indicator-radius-factor: $square-root-of-2 / 2;

// indicator border should be 12% of the indicator size, but borders don't accept % so using px for default
$default-indicator-border-width: 2px;
$default-indicator-size: 28%;
$default-avatar-size: 25px;
$default-image-size: 100%;

$indicator-border-size-relative-to-indicator-size: 0.12;
$min-allowed-indicator-border-width: 0.8px;
$max-allowed-indicator-border-width: 2px;

// indicator border is % of indicator size which itself is some % of avatar size
@function indicator-border-width(
  $indicator-size-relative-to-avatar-size,
  $avatar-size
) {
  @return clamp(
    #{$min-allowed-indicator-border-width},
    #{$indicator-border-size-relative-to-indicator-size} * #{$indicator-size-relative-to-avatar-size} *
      #{$avatar-size},
    #{$max-allowed-indicator-border-width}
  );
}

// order of elements:
// $modifier - one of UserAvatarSize
// $avatar-size - set in pixels or percent for larger than 54px
// $indicator-size - set in percent of parent
// $indicator-border-width - calculated as a percent of indicator size
$avatar-sizes-enum: (
  (small, 25px, 28%, indicator-border-width(0.28, 25px)),
  (medium, 40px, 28%, indicator-border-width(0.28, 40px)),
  (large, 54px, 28%, indicator-border-width(0.28, 54px)),
  (full, max(55px, 100%), 16%, indicator-border-width(0.16, 108px))
);

.UserAvatar {
  @include square-size($default-avatar-size);
  position: relative;

  &:hover {
    .UserAvatar__nametag--hover {
      opacity: 1;

      background-color: $primary;
      padding: $spacing--xs;

      transform: scale(1.5) translate(-35%, 50%);
      box-shadow: 0 0 0 3px lighten($primary--darker, 10%),
        0 2px 4px opaque-black(0.2);
    }
  }

  &__image {
    @include square-size($default-image-size);
    border-radius: 50%;
    vertical-align: unset;
  }

  &__status-indicator {
    position: absolute;
    bottom: 0;
    right: 0;
    border-radius: 50%;
    z-index: z(user-avatar-status-indicator);
    display: block;

    @include square-size($default-indicator-size);

    // NOTE: for the illusion of transparency, the border's style and color should be set by @include background-color() mixin in the appropriate ancestor
    border-style: var(--UserAvatar__status-indicator--border-style);
    border-color: var(--UserAvatar__status-indicator--border-color);
    border-width: $default-indicator-border-width;
  }

  &--clickable {
    cursor: pointer;

    &:hover {
      opacity: 0.9;
    }
  }

  @each $modifier, $avatar-size, $indicator-size,
    $indicator-border-width in $avatar-sizes-enum
  {
    &--#{$modifier},
    &--#{$modifier} img {
      @include square-size($avatar-size);
    }

    &--#{$modifier} &__status-indicator {
      @include square-size($indicator-size);
      border-width: $indicator-border-width;

      // NOTE: variable is just template for DRY, the actual calc() is performed in the browser
      // calculated out of both circles sizes and offset for the bottom/right side of the indicator
      $indicator-position-offset: calc(
        #{$avatar-size} *
          #{$indicator-offset-factor} -
          #{$indicator-size} *
          #{$indicator-radius-factor}
      );
      right: $indicator-position-offset;
      bottom: $indicator-position-offset;
    }
  }

  &__nametag {
    position: absolute;
    color: $white;

    opacity: 0;

    min-width: 70%;

    text-align: center;

    margin: 0 -50% 0 auto;
    padding: 0 $spacing--xs;

    bottom: 10%;
    left: 50%;

    border-radius: $border-radius--md;

    font-size: $font-size--xs;
    line-height: 1;

    background-color: opaque-black(0.4);
    box-shadow: 0 2px 4px opaque-black(0.2);

    transform: translate(-50%, 0);
    transition: transform 400ms, padding 400ms, opacity 600ms,
      background-color 600ms;
  }
}
